{"version":3,"sources":["app.js","environment.js","main.js","daily-bill/add-bill.js","daily-bill/bill-details.js","daily-bill/bill-list.js","daily-bill/statistics.js","resources/index.js","daily-bill/currency/currency-list.js","daily-bill/product/product-item.js","daily-bill/product/product-list.js","daily-bill/service/daily-bill-service.js","daily-bill/shop/shop-item.js","daily-bill/shop/shop-list.js","daily-bill/components/bill-item/edit-bill-item.js","daily-bill/components/filtered-select/filtered-select.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","AddBill","inject","dailyBillService","activate","params","routeConfig","console","log","id","changeCurrency","self","messages","getShops","response","json","data","shops","object","getProducts","prodData","products","getAllCurrencies","currenciesData","currencies","getBillById","bill","initOpenBill","date","createBill","catch","error","attached","Date","dateStr","getFullYear","getMonth","getDate","defaultCurrency","find","c","currency","shop","shopId","shopName","items","addBillItem","push","createDefaultBillItem","addBill","parse","validateBill","length","navigateToRoute","updateBill","product","productId","productName","price","amount","BillDetails","billSum","forEach","element","edit","BillList","startDateStr","endDateStr","findBills","viewBillDetails","startDate","endDate","startPeriodDate","endPeriodDate","getBills","bills","Statistics","productNames","selectedCurrency","fullStatiscicInfo","statisticsByProduct","getStatisticsByProduct","names","it","filter","getStatisticByProduct","fullStatisticInfo","active","isCurrencyExists","statisticInfo","statisticDetails","allEnabled","totalSumCalculated","totalSum","updateStatistics","switchItem","statisticsItem","addProductName","switchItems","CurrencyList","initCurrencies","errorMessages","e","editCurrency","ProductItem","initProduct","getProductById","updateProduct","code","message","ProductList","initProducts","filterValue","filteredProducts","getAllProducts","editProduct","filterChange","toLowerCase","indexOf","httpClient","DailyBillService","fetch","method","body","findLastPrice","getAllShops","getShopById","updateShop","ShopItem","initShop","ShopList","initShops","filteredShops","editShop","EditBillItem","lastPrice","billItem","FilteredSelect","filteredItems","selectedItem","searchByFilterValue","filterValues","condition","s","delimeter","split","i","value","index","array","filterSelectedItem","selectItem","callbackFn"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA;;;;;sBACZC,2CAAgBC,QAAQC,QAAO;AAC5BD,mBAAOE,KAAP,GAAe,YAAf;AACAF,mBAAOG,GAAP,CAAW,CACP,EAAEC,OAAO,EAAT,EAA0BC,UAAU,sBAApC,EAA8DH,OAAO,WAArE,EAAkFI,MAAM,UAAxF,EADO,EAEP,EAAEF,OAAO,UAAT,EAAsBC,UAAU,yBAAhC,EAA2DC,MAAK,aAAhE,EAFO,EAGP,EAACF,OAAO,UAAR,EAAoBC,UAAU,qBAA9B,EAAqDC,MAAM,SAA3D,EAHO,EAIP,EAACF,OAAO,eAAR,EAAyBC,UAAU,qBAAnC,EAA0DC,MAAM,UAAhE,EAJO,EAKP,EAACF,OAAO,YAAR,EAAsBC,UAAU,uBAAhC,EAAyDC,MAAM,YAA/D,EALO,EAMP,EAACF,OAAO,cAAR,EAAwBC,UAAU,iCAAlC,EAAqEC,MAAM,cAA3E,EANO,EAOP,EAACF,OAAO,kBAAR,EAA4BC,UAAU,iCAAtC,EAAyEC,MAAM,cAA/E,EAPO,EAQP,EAACF,OAAO,WAAR,EAAqBC,UAAU,2BAA/B,EAA4DC,MAAM,WAAlE,EARO,EASP,EAACF,OAAO,eAAR,EAAyBC,UAAU,2BAAnC,EAAgEC,MAAM,WAAtE,EATO,EAUP,EAACF,OAAO,eAAR,EAAyBC,UAAU,mCAAnC,EAAwEC,MAAM,eAA9E,EAVO,CAAX;;AAaA,iBAAKL,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;oBCjBY;AACbM,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQV,MAAR,CAAe;AACbW,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;QCrBYC,kBAAAA;gBACFC,2BAAS;AACZ,mBAAO,2DAAP;AACH;;AACD,yBAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACH;;0BACDwB,6BAASC,QAAQC,aAAa;AAAA;;AAC1B,iBAAKA,WAAL,GAAmBA,WAAnB;AACAC,oBAAQC,GAAR,CAAY,mBAAZ;AACAD,oBAAQC,GAAR,CAAY,UAAZ,EAAwBH,OAAOI,EAA/B;AACA,iBAAKC,cAAL,GAAsB,KAAtB;AACA,gBAAIC,OAAM,IAAV;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAKT,gBAAL,CAAsBU,QAAtB,GACKd,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEiBhB,IAFjB,CAEsB,gBAAQ;AACVQ,wBAAQC,GAAR,CAAY,SAAZ;AACAD,wBAAQC,GAAR,CAAYQ,IAAZ;AACAL,qBAAKM,KAAL,GAAaD,KAAKE,MAAlB;AACA,uBAAOP,KAAKM,KAAZ;AACH,aAPjB,EAOmBlB,IAPnB,CAOwB,iBAAS;AACb,uBAAOY,KAAKR,gBAAL,CAAsBgB,WAAtB,EAAP;AAGH,aAXjB,EAWmBpB,IAXnB,CAWwB;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aAXxB,EAYiBhB,IAZjB,CAYsB,oBAAY;AACoBQ,wBAAQC,GAAR,CAAY,YAAZ;AACAD,wBAAQC,GAAR,CAAYY,QAAZ;AACAb,wBAAQC,GAAR,CAAYY,SAASF,MAArB;AACAP,qBAAKU,QAAL,GAAgBD,SAASF,MAAzB;AACA,uBAAOP,KAAKU,QAAZ;AACH,aAlBnD,EAmBiBtB,IAnBjB,CAmBsB;AAAA,uBAAYY,KAAKR,gBAAL,CAAsBmB,gBAAtB,EAAZ;AAAA,aAnBtB,EAoByCvB,IApBzC,CAoB8C;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aApB9C,EAqByChB,IArBzC,CAqB8C,0BAAkB;AACpBQ,wBAAQC,GAAR,CAAY,cAAZ;AACAD,wBAAQC,GAAR,CAAYe,cAAZ;AACAZ,qBAAKa,UAAL,GAAkBD,eAAeL,MAAjC;AAEH,aA1BzC,EA2BiBnB,IA3BjB,CA2BsB,oBAAY;AACd,oBAAGM,OAAOI,EAAV,EAAc;AACF,2BAAOE,KAAKR,gBAAL,CAAsBsB,WAAtB,CAAkCpB,OAAOI,EAAzC,EACFV,IADE,CACG;AAAA,+BAAYe,SAASC,IAAT,EAAZ;AAAA,qBADH,EAEFhB,IAFE,CAEG,gBAAQ;AACVQ,gCAAQC,GAAR,CAAY,QAAZ;AACAD,gCAAQC,GAAR,CAAYQ,KAAKE,MAAjB;AACAP,6BAAKe,IAAL,GAAYV,KAAKE,MAAjB;AACAP,6BAAKgB,YAAL;AACApB,gCAAQC,GAAR,CAAY,aAAZ;AACAD,gCAAQC,GAAR,CAAYG,KAAKe,IAAL,CAAUE,IAAtB;AACA,+BAAOjB,KAAKe,IAAZ;AACP,qBAVM,CAAP;AAWX,iBAZD,MAYO;AACH,0BAAKG,UAAL;AACH;AAEJ,aA5CjB,EA4CmBC,KA5CnB,CA4CyB,iBAAS;AACdvB,wBAAQC,GAAR,CAAY,oBAAZ;AACAD,wBAAQC,GAAR,CAAYuB,KAAZ;AACApB,qBAAKM,KAAL,GAAa,EAAb;AACAN,qBAAKU,QAAL,GAAgB,EAAhB;AACH,aAjDjB;AAmDH;;0BACDW,+BAAW;AACPzB,oBAAQC,GAAR,CAAY,mBAAZ;AACH;;0BACDmB,uCAAe;AACX,gBAAIC,OAAO,IAAIK,IAAJ,CAAS,KAAKP,IAAL,CAAUE,IAAnB,CAAX;AACA,iBAAKF,IAAL,CAAUQ,OAAV,GAAoBN,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAA7E;AACH;;0BACHR,mCAAa;AACX,gBAAID,OAAO,IAAIK,IAAJ,EAAX;AACA,gBAAIK,kBAAkB,KAAKd,UAAL,CAAgBe,IAAhB,CAAqB;AAAA,uBAAKC,EAAEF,eAAF,IAAqB,IAA1B;AAAA,aAArB,CAAtB;AACA/B,oBAAQC,GAAR,CAAY,iBAAZ,EAA+B8B,eAA/B;AACA,iBAAKZ,IAAL,GAAY;AACRjB,oBAAI,IADI;AAERmB,sBAAMA,IAFE;AAGRM,yBAASN,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAH1D;AAIRI,0BAAUH,eAJF;AAKRI,sBAAM;AACJC,4BAAQ,IADJ;AAEJC,8BAAU;AAFN,iBALE;AASRC,uBAAO;AATC,aAAZ;AAYA,iBAAKC,WAAL;AACD;;0BAEDA,qCAAc;AACZvC,oBAAQC,GAAR,CAAY,eAAZ;AACA,iBAAKkB,IAAL,CAAUmB,KAAV,CAAgBE,IAAhB,CAAqB,KAAKC,qBAAL,EAArB;AACD;;0BAEDC,6BAAU;AAAA;;AACR1C,oBAAQC,GAAR,CAAY,WAAZ;AACA,iBAAKkB,IAAL,CAAUE,IAAV,GAAiBK,KAAKiB,KAAL,CAAW,KAAKxB,IAAL,CAAUQ,OAArB,CAAjB;AACA,iBAAKiB,YAAL;AACA,gBAAG,KAAKvC,QAAL,CAAcwC,MAAd,IAAwB,CAA3B,EAA8B;AAAA;AAC1B7C,4BAAQC,GAAR,CAAY,eAAZ;AACAD,4BAAQC,GAAR,CAAY,OAAKkB,IAAjB;AACA,wBAAIf,aAAJ;AACA,2BAAKR,gBAAL,CAAsB8C,OAAtB,CAA8B,OAAKvB,IAAnC,EACS3B,IADT,CACc;AAAA,+BAAYe,SAASC,IAAT,EAAZ;AAAA,qBADd,EAEShB,IAFT,CAEc,gBAAQ;AACVQ,gCAAQC,GAAR,CAAYQ,IAAZ;AACAL,6BAAK/B,MAAL,CAAYyE,eAAZ,CAA4B,UAA5B;AACH,qBALT;AAJ0B;AAU7B;AAEF;;0BAEDF,uCAAe;AACf,iBAAKvC,QAAL,GAAgB,EAAhB;AACG,gBAAI,CAAC,KAAKc,IAAL,CAAUgB,IAAV,CAAejC,EAApB,EAAwB;AACrB,qBAAKG,QAAL,CAAcmC,IAAd,CAAmB,eAAnB;AACF;AACH;;0BAEDO,mCAAa;AACT/C,oBAAQC,GAAR,CAAY,cAAZ;AACA,iBAAKkB,IAAL,CAAUE,IAAV,GAAiBK,KAAKiB,KAAL,CAAW,KAAKxB,IAAL,CAAUQ,OAArB,CAAjB;AACA3B,oBAAQC,GAAR,CAAY,KAAKkB,IAAjB;AACA,gBAAIf,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsBmD,UAAtB,CAAiC,KAAK5B,IAAtC,EACK3B,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVQ,wBAAQC,GAAR,CAAYQ,IAAZ;AACAL,qBAAK/B,MAAL,CAAYyE,eAAZ,CAA4B,UAA5B;AACH,aALL,EAKO;AACR;;0BAEHL,yDAAwB;AACtB,mBAAO;AACLO,yBAAS;AACPC,+BAAW,IADJ;AAEPC,iCAAa;AAFN,iBADJ;AAKLC,uBAAO,CALF;AAMLC,wBAAQ;AANH,aAAP;AAQD;;;;;;;;;;;;;;;;;;;QChJUC,sBAAAA;oBACF1D,2BAAS;AACZ,mBAAO,2DAAP;AACH;;AACD,6BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACH;;8BAEDwB,6BAASC,QAAQC,aAAa;AAC1B,iBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAIK,OAAO,IAAX;AACA,mBAAO,KAAKR,gBAAL,CAAsBsB,WAAtB,CAAkCpB,OAAOI,EAAzC,EACFV,IADE,CACG;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADH,EAEFhB,IAFE,CAEG,gBAAQ;AACVQ,wBAAQC,GAAR,CAAY,QAAZ;AACAD,wBAAQC,GAAR,CAAYQ,KAAKE,MAAjB;AACAP,qBAAKe,IAAL,GAAYV,KAAKE,MAAjB;AACA,oBAAIU,OAAO,IAAIK,IAAJ,CAASjB,KAAKE,MAAL,CAAYU,IAArB,CAAX;AACAjB,qBAAKe,IAAL,CAAUQ,OAAV,GAAoBN,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAA7E;AACA1B,qBAAKe,IAAL,CAAUmC,OAAV,GAAoB,CAApB;AACAlD,qBAAKe,IAAL,CAAUmB,KAAV,CAAgBiB,OAAhB,CAAwB,mBAAW;AAC/BnD,yBAAKe,IAAL,CAAUmC,OAAV,IAAqBE,QAAQL,KAAR,GAAgBK,QAAQJ,MAA7C;AACH,iBAFD;AAGL,aAZI,CAAP;AAaH;;8BACDK,uBAAO;AACH,iBAAKpF,MAAL,CAAYyE,eAAZ,CAA4B,UAA5B,EAAwC,EAAC5C,IAAI,KAAKiB,IAAL,CAAUjB,EAAf,EAAxC;AACH;;;;;;;;;;;;;;;;;;;QC7BQwD,mBAAAA;iBACF/D,2BAAS;AACZ,mBAAO,2DAAP;AACH;;AACD,0BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,gBAAIgD,OAAO,IAAIK,IAAJ,EAAX;AACA,iBAAKiC,YAAL,GAAoBtC,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyD,CAA7E;AACA,iBAAK+B,UAAL,GAAkBvC,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAA3E;AACH;;2BAEDjC,6BAASC,QAAQC,aAAa;AAC1B,iBAAK8D,SAAL;AACH;;2BAEDC,2CAAgB5D,IAAI;AAChBF,oBAAQC,GAAR,CAAY,sBAAsBC,EAAlC;AACA,iBAAK7B,MAAL,CAAYyE,eAAZ,CAA4B,aAA5B,EAA2C,EAAC5C,IAAIA,EAAL,EAA3C;AACH;;2BAED2D,iCAAY;AACR,gBAAIE,YAAYrC,KAAKiB,KAAL,CAAW,KAAKgB,YAAhB,CAAhB;AACA,gBAAIK,UAAUtC,KAAKiB,KAAL,CAAW,KAAKiB,UAAhB,CAAd;AACA,iBAAK9D,MAAL,GAAc;AACVmE,iCAAiBF,SADP;AAEVG,+BAAeF;AAFL,aAAd;AAIA,gBAAI5D,OAAO,IAAX;AACAJ,oBAAQC,GAAR,CAAY,iBAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKH,MAAjB;AACA,iBAAKF,gBAAL,CAAsBuE,QAAtB,CAA+B,KAAKrE,MAApC,EACaN,IADb,CACkB;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADlB,EAEahB,IAFb,CAEkB,gBAAQ;AACVQ,wBAAQC,GAAR,CAAYQ,IAAZ;AACAL,qBAAKgE,KAAL,GAAa3D,KAAKE,MAAlB;AACAP,qBAAKgE,KAAL,CAAWb,OAAX,CAAmB,UAACC,OAAD,EAAa;AAC5B,wBAAInC,OAAO,IAAIK,IAAJ,CAAS8B,QAAQnC,IAAjB,CAAX;AACAmC,4BAAQ7B,OAAR,GAAkBN,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAA3E;AACH,iBAHD;AAIH,aATb;AAUH;;;;;;;;;;;;;;;;;;;QCxCQuC,qBAAAA;mBACF1E,2BAAS;AACZ,mBAAO,2DAAP;AACH;;AAED,4BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC2B,oBAAQC,GAAR,CAAY,wBAAZ;AACA,iBAAKL,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,gBAAIgD,OAAO,IAAIK,IAAJ,EAAX;AACA,iBAAK5B,MAAL,GAAc;AACVmE,iCAAiB,IAAIvC,IAAJ,CAASL,KAAKO,WAAL,EAAT,EAA6BP,KAAKQ,QAAL,EAA7B,EAA8C,CAA9C,CADP;AAEVqC,+BAAe7C;AAFL,aAAd;;AAKA,iBAAKiD,YAAL,GAAoB,CAAC,EAAC5F,MAAM,EAAP,EAAD,CAApB;AACA,iBAAKiF,YAAL,GAAoBtC,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyD,CAA7E;AACA,iBAAK+B,UAAL,GAAkBvC,KAAKO,WAAL,KAAqB,GAArB,IAA4BP,KAAKQ,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDR,KAAKS,OAAL,EAA3E;AACA,iBAAKyC,gBAAL,GAAwB,IAAxB;AACA,iBAAKtD,UAAL,GAAkB,EAAlB;AACA,iBAAKuD,iBAAL,GAAyB,IAAzB;AACA,iBAAKC,mBAAL,GAA2B,EAA3B;AACH;;6BAED5E,6BAASC,QAAQC,aAAa;AAC1B,iBAAK2E,sBAAL,CAA4B,KAAK5E,MAAjC;AACH;;6BAED4E,yDAAuB5E,QAAQ;AAC3B,gBAAI6E,QAAQ,KAAKL,YAAL,CAAkB/F,GAAlB,CAAsB;AAAA,uBAAMqG,GAAGlG,IAAT;AAAA,aAAtB,EAAqCmG,MAArC,CAA4C;AAAA,uBAAMD,EAAN;AAAA,aAA5C,CAAZ;AACA9E,mBAAOwE,YAAP,GAAsBK,KAAtB;AACA3E,oBAAQC,GAAR,CAAYH,MAAZ;AACA,iBAAK2E,mBAAL,GAA2B,EAA3B;AACA,gBAAIrE,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsBkF,qBAAtB,CAA4ChF,MAA5C,EACiBN,IADjB,CACsB;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADtB,EAEiBhB,IAFjB,CAEsB,gBAAQ;AACVQ,wBAAQC,GAAR,CAAYQ,IAAZ;AACAL,qBAAK2E,iBAAL,GAAyBtE,KAAKE,MAA9B;AACA,oBAAIM,aAAab,KAAK2E,iBAAL,CAAuB9D,UAAxC;AACA,oBAAIA,WAAW4B,MAAX,GAAoB,CAAxB,EAA2B;;AAEvBzC,yBAAKa,UAAL,GAAkBA,WAAW1C,GAAX,CAAe,cAAM;AAAC,+BAAO,EAACG,MAAMkG,EAAP,EAAWI,QAAQ,KAAnB,EAAP;AAAiC,qBAAvD,CAAlB;AACA,wBAAG,CAAC5E,KAAKmE,gBAAT,EAA2B;AACvBnE,6BAAKmE,gBAAL,GAAwBnE,KAAKa,UAAL,CAAgB,CAAhB,EAAmBvC,IAA3C;AACA0B,6BAAKa,UAAL,CAAgB,CAAhB,EAAmB+D,MAAnB,GAA4B,IAA5B;AACH,qBAHD,MAGO;AACH,4BAAIC,mBAAmB,KAAvB;AACA7E,6BAAKa,UAAL,CAAgBsC,OAAhB,CAAwB,cAAM;AAC1B,gCAAIqB,GAAGlG,IAAH,IAAW0B,KAAKmE,gBAApB,EAAsC;AAClCK,mCAAGI,MAAH,GAAY,IAAZ;AACAC,mDAAmB,IAAnB;AACH;AACJ,yBALD;AAMA,4BAAG,CAACA,gBAAJ,EAAsB;AAClB7E,iCAAKmE,gBAAL,GAAwBnE,KAAKa,UAAL,CAAgB,CAAhB,EAAmBvC,IAA3C;AACA0B,iCAAKa,UAAL,CAAgB,CAAhB,EAAmB+D,MAAnB,GAA4B,IAA5B;AACH;AACJ;;AAGD5E,yBAAKqE,mBAAL,GAA2BrE,KAAK2E,iBAAL,CAAuBG,aAAvB,CAAqC9E,KAAKmE,gBAA1C,CAA3B;AACAnE,yBAAKqE,mBAAL,CAAyBU,gBAAzB,CAA0C5G,GAA1C,CAA8C,cAAM;AACpBqG,2BAAGI,MAAH,GAAY,IAAZ;AACA,+BAAOJ,EAAP;AAC/B,qBAHD;;AAKAxE,yBAAKqE,mBAAL,CAAyBW,UAAzB,GAAsC,IAAtC;AACAhF,yBAAKqE,mBAAL,CAAyBY,kBAAzB,GAA8CjF,KAAKqE,mBAAL,CAAyBa,QAAvE;AACH;AACJ,aApCjB;AAqCH;;6BAEDC,+CAAmB;AACf,gBAAIxB,YAAYrC,KAAKiB,KAAL,CAAW,KAAKgB,YAAhB,CAAhB;AACA,gBAAIK,UAAUtC,KAAKiB,KAAL,CAAW,KAAKiB,UAAhB,CAAd;AACA,iBAAK9D,MAAL,GAAc;AACVmE,iCAAiBF,SADP;AAEVG,+BAAeF;AAFL,aAAd;AAIA,iBAAKU,sBAAL,CAA4B,KAAK5E,MAAjC;AACH;;6BAEDK,yCAAe+B,UAAU;AACrB,iBAAKjB,UAAL,CAAgBsC,OAAhB,CAAwB;AAAA,uBAAMqB,GAAGlG,IAAH,IAAWwD,SAASxD,IAApB,GAA2BkG,GAAGI,MAAH,GAAY,KAAvC,GAA+CJ,GAAGI,MAAH,GAAY,IAAjE;AAAA,aAAxB;AACA,iBAAKT,gBAAL,GAAwBrC,SAASxD,IAAjC;AACA,iBAAK6G,gBAAL;AACH;;6BAEDC,iCAAWC,gBAAgB;AACvBA,2BAAeT,MAAf,GAAwB,CAACS,eAAeT,MAAxC;AACA,iBAAKP,mBAAL,CAAyBY,kBAAzB,GAA8C,CAACI,eAAeT,MAAhB,GACpC,KAAKP,mBAAL,CAAyBY,kBAAzB,GAA8CI,eAAetC,KADzB,GAEpC,KAAKsB,mBAAL,CAAyBY,kBAAzB,GAA8CI,eAAetC,KAFvE;AAGH;;6BAEDuC,2CAAiB;AACb,iBAAKpB,YAAL,CAAkB9B,IAAlB,CAAuB,EAAC9D,MAAM,EAAP,EAAvB;AACH;;6BAEDiH,qCAAc;AACV,iBAAKlB,mBAAL,CAAyBW,UAAzB,GAAsC,CAAC,KAAKX,mBAAL,CAAyBW,UAAhE;AACA,iBAAKX,mBAAL,CAAyBY,kBAAzB,GAA8C,CAAC,KAAKZ,mBAAL,CAAyBW,UAA1B,GAAuC,CAAvC,GAA2C,KAAKX,mBAAL,CAAyBa,QAAlH;AACA,gBAAIlF,OAAO,IAAX;AACA,iBAAKqE,mBAAL,CAAyBU,gBAAzB,CAA0C5G,GAA1C,CAA8C,cAAM;AAChDqG,mBAAGI,MAAH,GAAY5E,KAAKqE,mBAAL,CAAyBW,UAArC;AACH,aAFD;AAGH;;;;;;;;;;;UC9GWvG,YAAAA;AAAT,WAASA,SAAT,CAAmBT,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;QCAYwH,uBAAAA;qBACFjG,2BAAS;AACR,mBAAO,2DAAP;AACP;;AACD,8BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKwH,cAAL;AACH;;+BAEDA,2CAAiB;AACb,gBAAIzF,OAAO,IAAX;AACA,iBAAKa,UAAL,GAAkB,EAAlB;AACA,iBAAKrB,gBAAL,CAAsBmB,gBAAtB,GACSvB,IADT,CACc;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADd,EAEShB,IAFT,CAEc,gBAAQ;AACVY,qBAAKa,UAAL,GAAkBR,KAAKE,MAAvB;AACH,aAJT,EAIWY,KAJX,CAIiB,aAAK;AACVnB,qBAAK0F,aAAL,CAAmBtD,IAAnB,CAAwBuD,CAAxB;AACH,aANT;AAOH;;+BAEDC,qCAAa9F,IAAI;AACbF,oBAAQC,GAAR,CAAY,oBAAoBC,EAAhC;AACH;;;;;;;;;;;;;;;;;;;QCvBQ+F,sBAAAA;oBACFtG,2BAAS;AACX,mBAAO,2DAAP;AACJ;;AACD,6BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AAEH;;8BAEDwB,6BAASC,QAAQC,aAAa;AAC1B,gBAAIG,KAAKJ,OAAOI,EAAhB;AACA,iBAAKgG,WAAL,CAAiBhG,EAAjB;AACH;;8BAEDgG,mCAAYhG,IAAI;AACZ,iBAAK4F,aAAL,GAAqB,EAArB;AACA,gBAAI1F,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsBuG,cAAtB,CAAqCjG,EAArC,EACKV,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVY,qBAAK4C,OAAL,GAAevC,KAAKE,MAApB;AACAX,wBAAQC,GAAR,CAAY,UAAZ,EAAwBG,KAAK4C,OAA7B;AACH,aALL,EAKOzB,KALP,CAKa,aAAK;AACVvB,wBAAQC,GAAR,CAAY,oBAAoB8F,CAAhC;AACH,aAPL;AAQH;;8BAEDK,yCAAgB;AAAA;;AACZ,iBAAKN,aAAL,GAAqB,EAArB;AACA,gBAAI1F,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsBwG,aAAtB,CAAoC,KAAKpD,OAAzC,EACKxD,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVQ,wBAAQC,GAAR,CAAY,uBAAZ;AACAD,wBAAQC,GAAR,CAAYQ,IAAZ;AACA,oBAAGA,KAAK4F,IAAL,IAAa,KAAhB,EAAsB;AAClB,0BAAKhI,MAAL,CAAYyE,eAAZ,CAA4B,cAA5B;AACH,iBAFD,MAEO;AACH1C,yBAAK0F,aAAL,CAAmBtD,IAAnB,CAAwB/B,KAAK6F,OAA7B;AACH;AACJ,aAVL;AAWH;;;;;;;;;;;;;;;;;;;QC3CQC,sBAAAA;oBACF5G,2BAAS;AACR,mBAAO,2DAAP;AACP;;AACD,6BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKmI,YAAL;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACH;;8BAEDD,uCAAe;AACX,gBAAIpG,OAAO,IAAX;AACA,iBAAK0F,aAAL,GAAqB,EAArB;AACA,iBAAKhF,QAAL,GAAgB,EAAhB;AACA,iBAAK4F,gBAAL,GAAwB,EAAxB;AACA,iBAAK9G,gBAAL,CAAsB+G,cAAtB,GACSnH,IADT,CACc;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADd,EAEShB,IAFT,CAEc,gBAAQ;AACVY,qBAAKU,QAAL,GAAgBL,KAAKE,MAArB;AACAP,qBAAKsG,gBAAL,GAAwBjG,KAAKE,MAA7B;AACH,aALT,EAKWY,KALX,CAKiB,aAAK;AACVnB,qBAAK0F,aAAL,CAAmBtD,IAAnB,CAAwBuD,CAAxB;AACH,aAPT;AAQH;;8BAEDa,mCAAY1G,IAAI;AACZ,iBAAK7B,MAAL,CAAYyE,eAAZ,CAA4B,cAA5B,EAA4C,EAAC5C,IAAIA,EAAL,EAA5C;AACH;;8BAED2G,uCAAe;AAAA;;AACX,gBAAI,KAAKJ,WAAT,EAAsB;AAClB,qBAAKC,gBAAL,GAAwB,KAAK5F,QAAL,CAAc+D,MAAd,CAAqB;AAAA,2BAAMD,GAAGlG,IAAH,CAAQoI,WAAR,GAAsBC,OAAtB,CAA8B,MAAKN,WAAL,CAAiBK,WAAjB,EAA9B,KAAgE,CAAtE;AAAA,iBAArB,CAAxB;AACH,aAFD,MAEO;AACH,qBAAKJ,gBAAL,GAAwB,KAAK5F,QAA7B;AACH;AACJ;;;;;;;;;;;;;;;;;;;ACnCL,QAAIkG,aAAa,oCAAjB;;QAEaC,2BAAAA;AACT,oCAAc;AAAA;AACb;;mCAED9C,6BAASrE,QAAQ;AACbE,oBAAQC,GAAR,CAAY,WAAZ;AACA,mBAAO+G,WAAWE,KAAX,CAAiB,wCAAjB,EAA2D;AACvDC,wBAAQ,MAD+C;AAEvDC,sBAAM,8BAAKtH,MAAL;AAFiD,aAA3D,CAAP;AAIH;;mCAEDoB,mCAAYhB,IAAI;AACZF,oBAAQC,GAAR,CAAY,qBAAoBC,EAAhC;AACA,mBAAO8G,WAAWE,KAAX,CAAiB,2CAA2ChH,EAA5D,CAAP;AACH;;mCAEDwC,2BAAQvB,MAAM;AACV,mBAAO6F,WAAWE,KAAX,CAAiB,sCAAjB,EAAyD;AAC3DC,wBAAQ,KADmD;AAE3DC,sBAAM,8BAAKjG,IAAL;AAFqD,aAAzD,CAAP;AAID;;mCACH4B,iCAAW5B,MAAM;AACb,mBAAO6F,WAAWE,KAAX,CAAiB,uCAAjB,EAA0D;AAC1DC,wBAAQ,MADkD;AAE1DC,sBAAM,8BAAKjG,IAAL;AAFoD,aAA1D,CAAP;AAIH;;mCAEDb,+BAAW;AACP,mBAAO0G,WAAWE,KAAX,CAAiB,wCAAjB,CAAP;AACH;;mCAEDtG,qCAAc;AACV,mBAAOoG,WAAWE,KAAX,CAAiB,2CAAjB,CAAP;AACH;;mCAEDpC,uDAAsBhF,QAAQ;AAC1BE,oBAAQC,GAAR,CAAY,yBAAZ;AACA,mBAAO+G,WAAWE,KAAX,CAAiB,qDAAjB,EAAwE;AACpEC,wBAAQ,MAD4D;AAEpEC,sBAAM,8BAAKtH,MAAL;AAF8D,aAAxE,CAAP;AAIH;;mCAEDuH,uCAAcjF,QAAQa,WAAW;AAC7B,mBAAO+D,WAAWE,KAAX,CAAiB,sDAAsD9E,MAAtD,GAA+D,WAA/D,GAA6Ea,SAA9F,CAAP;AACH;;mCAEDqE,qCAAa;AACT,mBAAON,WAAWE,KAAX,CAAiB,iCAAjB,CAAP;AACH;;mCAEDK,mCAAYrH,IAAI;AACZ,mBAAO8G,WAAWE,KAAX,CAAiB,iCAAiChH,EAAlD,CAAP;AACH;;mCAEDsH,iCAAWrF,MAAM;AACb,mBAAO6E,WAAWE,KAAX,CAAiB,6BAAjB,EAAgD;AACnDC,wBAAQ,MAD2C;AAEnDC,sBAAM,8BAAKjF,IAAL;AAF6C,aAAhD,CAAP;AAIH;;mCAEDwE,2CAAgB;AACZ,mBAAOK,WAAWE,KAAX,CAAiB,oCAAjB,CAAP;AACH;;mCAEDf,yCAAejG,IAAI;AACf,mBAAO8G,WAAWE,KAAX,CAAiB,oCAAoChH,EAArD,CAAP;AACH;;mCAEDkG,uCAAcpD,SAAS;AACnB,mBAAOgE,WAAWE,KAAX,CAAiB,gCAAjB,EAAmD;AAClDC,wBAAQ,MAD0C;AAElDC,sBAAM,8BAAKpE,OAAL;AAF4C,aAAnD,CAAP;AAIH;;mCAEDjC,+CAAmB;AACf,mBAAOiG,WAAWE,KAAX,CAAiB,oCAAjB,CAAP;AACH;;;;;;;;;;;;;;;;;;;QCpFQO,mBAAAA;iBACF9H,2BAAS;AACX,mBAAO,2DAAP;AACJ;;AACD,0BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKyH,aAAL,GAAqB,EAArB;AACH;;2BAEDjG,6BAASC,QAAQC,aAAa;AAC1B,gBAAIG,KAAKJ,OAAOI,EAAhB;AACA,iBAAKwH,QAAL,CAAcxH,EAAd;AACH;;2BAEDwH,6BAASxH,IAAI;AACT,gBAAIE,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsB2H,WAAtB,CAAkCrH,EAAlC,EACKV,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVY,qBAAK+B,IAAL,GAAY1B,KAAKE,MAAjB;AACAX,wBAAQC,GAAR,CAAY,OAAZ,EAAqBG,KAAK+B,IAA1B;AACH,aALL,EAKOZ,KALP,CAKa,aAAK;AACVvB,wBAAQC,GAAR,CAAY,oBAAoB8F,CAAhC;AACH,aAPL;AAQH;;2BAEDyB,mCAAa;AAAA;;AACT,iBAAK1B,aAAL,GAAqB,EAArB;AACA,gBAAI1F,OAAO,IAAX;AACA,iBAAKR,gBAAL,CAAsB4H,UAAtB,CAAiC,KAAKrF,IAAtC,EACK3C,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVQ,wBAAQC,GAAR,CAAY,oBAAZ;AACAD,wBAAQC,GAAR,CAAYQ,IAAZ;AACA,oBAAGA,KAAK4F,IAAL,IAAa,KAAhB,EAAsB;AAClB,0BAAKhI,MAAL,CAAYyE,eAAZ,CAA4B,WAA5B;AACH,iBAFD,MAEO;AACH1C,yBAAK0F,aAAL,CAAmBtD,IAAnB,CAAwB/B,KAAK6F,OAA7B;AACH;AACJ,aAVL;AAWH;;;;;;;;;;;;;;;;;;;QC1CQqB,mBAAAA;iBACFhI,2BAAS;AACR,mBAAO,2DAAP;AACP;;AACD,0BAAYC,gBAAZ,EAA8BvB,MAA9B,EAAsC;AAAA;;AAClC,iBAAKuB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKvB,MAAL,GAAcA,MAAd;AACA,iBAAKuJ,SAAL;AACA,iBAAKnB,WAAL,GAAmB,EAAnB;AACH;;2BAEDmB,iCAAY;AACR,gBAAIxH,OAAO,IAAX;AACA,iBAAK0F,aAAL,GAAqB,EAArB;AACA,iBAAKlG,gBAAL,CAAsB0H,WAAtB,GACK9H,IADL,CACU;AAAA,uBAAYe,SAASC,IAAT,EAAZ;AAAA,aADV,EAEKhB,IAFL,CAEU,gBAAQ;AACVY,qBAAKM,KAAL,GAAaD,KAAKE,MAAlB;AACAP,qBAAKyH,aAAL,GAAqBpH,KAAKE,MAA1B;AACH,aALL,EAKOY,KALP,CAKa,aAAK;AACVnB,qBAAK0F,aAAL,CAAmBtD,IAAnB,CAAwBuD,CAAxB;AACH,aAPL;AAQH;;2BAED+B,6BAAS5H,IAAI;AACT,iBAAK7B,MAAL,CAAYyE,eAAZ,CAA4B,WAA5B,EAAyC,EAAC5C,IAAIA,EAAL,EAAzC;AACH;;2BAED2G,uCAAe;AAAA;;AACX7G,oBAAQC,GAAR,CAAY,qBAAZ;AACA,gBAAG,KAAKwG,WAAR,EAAqB;AACjB,qBAAKoB,aAAL,GAAqB,KAAKnH,KAAL,CAAWmE,MAAX,CAAkB;AAAA,2BAAMD,GAAGlG,IAAH,CAAQoI,WAAR,GAAsBC,OAAtB,CAA8B,MAAKN,WAAL,CAAiBK,WAAjB,EAA9B,KAAiE,CAAvE;AAAA,iBAAlB,CAArB;AACH,aAFD,MAEO;AACH,qBAAKe,aAAL,GAAqB,KAAKnH,KAA1B;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCnCQqH,uBAAAA;qBAKFpI,2BAAS;AACZ,mBAAO,oCAAP;AACH;;AACD,8BAAYC,gBAAZ,EAA8B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,iBAK9ByH,aAL8B,GAKd,UAACpE,SAAD,EAAe;AAC3BjD,wBAAQC,GAAR,CAAY,iCAAiCgD,SAA7C;AACAjD,wBAAQC,GAAR,CAAY,MAAKmC,MAAjB;AACA,oBAAG,MAAKA,MAAR,EAAgB;AAAA;AACZ,4BAAIhC,YAAJ;AACA;AAAA,+BAAO,MAAKR,gBAAL,CAAsByH,aAAtB,CAAoC,MAAKjF,MAAzC,EAAiDa,SAAjD,EACQzD,IADR,CACa;AAAA,uCAAYe,SAASC,IAAT,EAAZ;AAAA,6BADb,EAEQhB,IAFR,CAEa,gBAAQ;AACVQ,wCAAQC,GAAR,CAAY,YAAZ;AACAD,wCAAQC,GAAR,CAAYQ,IAAZ;AACA,oCAAIuH,YAAYvH,KAAKE,MAArB;AACAP,qCAAK6H,QAAL,CAAc9E,KAAd,GAAsB6E,YAAYA,SAAZ,GAAwB,CAA9C;AACA,uCAAOvH,IAAP;AACH,6BARR;AAAP;AAFY;;AAAA;AAWf;AAEJ,aArB6B;;AAC1BT,oBAAQC,GAAR,CAAY,2BAAZ;AACA,iBAAKL,gBAAL,GAAwBA,gBAAxB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXQsI,yBAAAA;AAIT,kCAAc;AAAA;;AAAA;;AAAA;;AAAA;AACb;;iCACDzG,+BAAW;AACP,gBAAG,KAAKa,KAAR,EAAe;AACX,qBAAK6F,aAAL,GAAqB,KAAK7F,KAA1B;AACH;AACD,gBAAG,KAAK8F,YAAR,EAAsB;AAClB,qBAAK3B,WAAL,GAAmB,KAAK2B,YAAL,CAAkB1J,IAArC;AACH;AACJ;;iCAED2J,mDAAoBzD,IAAI0D,cAAc;AAClC,gBAAIC,YAAY,IAAhB;AACA,iCAAaD,YAAb,kHAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAAnBE,CAAmB;;AACxBD,4BAAYA,aAAa3D,GAAGlG,IAAH,CAAQoI,WAAR,GAAsBC,OAAtB,CAA8ByB,EAAE1B,WAAF,EAA9B,KAAkD,CAA3E;AACF;AACD,mBAAOyB,SAAP;AACH;;iCAED1B,uCAAe;AAAA;;AACX,gBAAG,KAAKJ,WAAR,EAAqB;AAAA;AACjB,wBAAIgC,YAAY,KAAhB;AACA,wBAAIH,eAAe,MAAK7B,WAAL,CAAiBiC,KAAjB,CAAuBD,SAAvB,EAAkC5D,MAAlC,CAAyC;AAAA,+BAAK8D,MAAM,EAAX;AAAA,qBAAzC,CAAnB;AACA,0BAAKR,aAAL,GAAqB,MAAK7F,KAAL,CAAWuC,MAAX,CAAkB;AAAA,+BAAM,MAAKwD,mBAAL,CAAyBzD,EAAzB,EAA6B0D,YAA7B,CAAN;AAAA,qBAAlB,CAArB;AAHiB;AAIpB,aAJD,MAIO;AACH,qBAAKH,aAAL,GAAqB,KAAK7F,KAA1B;AACH;AACD,gBAAIsG,QAAQ,KAAKtG,KAAL,CAAWN,IAAX,CAAgB,UAACwB,OAAD,EAAUqF,KAAV,EAAiBC,KAAjB;AAAA,uBAA2BtF,QAAQ9E,IAAR,CAAaoI,WAAb,OAA+B,MAAKL,WAAL,CAAiBK,WAAjB,EAA1D;AAAA,aAAhB,CAAZ;AACA,gBAAG8B,KAAH,EAAU;AACN,qBAAKR,YAAL,GAAoBQ,KAApB;AACA,qBAAKG,kBAAL,GAA0BH,KAA1B;AACH,aAHD,MAGO;AACH,qBAAKR,YAAL,GAAoB;AAChBlI,wBAAI,IADY;AAEhBxB,0BAAM,KAAK+H;AAFK,iBAApB;AAIH;AACJ;;iCAEDuC,mCAAa;AACThJ,oBAAQC,GAAR,CAAY,aAAZ;AACA,iBAAKwG,WAAL,GAAmB,KAAKsC,kBAAL,CAAwBrK,IAA3C;AACA,iBAAK0J,YAAL,GAAoB,KAAKW,kBAAzB;AACA,gBAAG,KAAKE,UAAR,EAAoB;AAChB,qBAAKA,UAAL,CAAgB,KAAKb,YAAL,CAAkBlI,EAAlC;AACH;AACJ","file":"app-bundle.js","sourcesContent":["export class App {\n configureRouter(config, router){\n    config.title = 'Daily Bill';\n    config.map([\n        { route: '',              moduleId: 'daily-bill/bill-list',   title: 'Bill List', name: 'billList'},\n        { route: 'bill/:id',  moduleId: 'daily-bill/bill-details', name:'billDetails' },\n        {route: 'bill/add', moduleId: 'daily-bill/add-bill', name: 'addBill'},\n        {route: 'bill/edit/:id', moduleId: 'daily-bill/add-bill', name: 'editBill'},\n        {route: 'statistics', moduleId: 'daily-bill/statistics', name: 'statistics'},\n        {route: 'product/list', moduleId: 'daily-bill/product/product-list', name: 'product-list'},\n        {route: 'product/edit/:id', moduleId: 'daily-bill/product/product-item', name: 'product-item'},\n        {route: 'shop/list', moduleId: 'daily-bill/shop/shop-list', name: 'shop-list'},\n        {route: 'shop/edit/:id', moduleId: 'daily-bill/shop/shop-item', name: 'shop-item'},\n        {route: 'currency/list', moduleId: 'daily-bill/currency/currency-list', name: 'currency-list'}\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class AddBill{\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n    }\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n        console.log('activate add-bill');\n        console.log('params: ', params.id)\n        this.changeCurrency = false;\n        let self =this;\n        this.messages = [];\n        this.dailyBillService.getShops()\n            .then(response => response.json())\n                        .then(data => {\n                            console.log('shops: ')\n                            console.log(data)\n                            self.shops = data.object;\n                            return self.shops;\n                        }).then(shops => {\n                            return self.dailyBillService.getProducts()\n\n\n                        }).then(response => response.json())\n                        .then(prodData => {\n                                                              console.log('products: ')\n                                                              console.log(prodData);\n                                                              console.log(prodData.object);\n                                                              self.products = prodData.object\n                                                              return self.products;\n                                                          })\n                        .then(products => self.dailyBillService.getAllCurrencies())\n                                                .then(response => response.json())\n                                                .then(currenciesData => {\n                                                    console.log('Currencies: ');\n                                                    console.log(currenciesData);\n                                                    self.currencies = currenciesData.object;\n\n                                                })\n                        .then(products => {\n                            if(params.id) {\n                                        return self.dailyBillService.getBillById(params.id)\n                                            .then(response => response.json())\n                                            .then(data => {\n                                                console.log('bill: ')\n                                                console.log(data.object)\n                                                self.bill = data.object;\n                                                self.initOpenBill();\n                                                console.log('bill date: ')\n                                                console.log(self.bill.date);\n                                                return self.bill;\n                                        });\n                            } else {\n                                this.createBill();\n                            }\n\n                        }).catch(error => {\n                            console.log('Error getting data')\n                            console.log(error)\n                            self.shops = [];\n                            self.products = [];\n                        })\n\n    }\n    attached() {\n        console.log('attached add-bill')\n    }\n    initOpenBill() {\n        let date = new Date(this.bill.date)\n        this.bill.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n    }\n  createBill() {\n    let date = new Date();\n    let defaultCurrency = this.currencies.find(c => c.defaultCurrency == true);\n    console.log('defaultCurrency', defaultCurrency);\n    this.bill = {\n        id: null,\n        date: date,\n        dateStr: date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate(),\n        currency: defaultCurrency,\n        shop: {\n          shopId: null,\n          shopName: \"\"\n        },\n        items: [\n        ]\n      };\n    this.addBillItem()\n  }\n\n  addBillItem() {\n    console.log(\"add bill item\");\n    this.bill.items.push(this.createDefaultBillItem());\n  }\n\n  addBill() {\n    console.log(\"add bill:\");\n    this.bill.date = Date.parse(this.bill.dateStr);\n    this.validateBill();\n    if(this.messages.length == 0) {\n        console.log('bill to save:');\n        console.log(this.bill);\n        let self = this;\n        this.dailyBillService.addBill(this.bill)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n                    self.router.navigateToRoute('billList')\n                });\n    }\n\n  }\n\n  validateBill() {\n  this.messages = [];\n     if (!this.bill.shop.id) {\n        this.messages.push(\"Shop is empty\");\n     }\n  }\n\n  updateBill() {\n      console.log(\"update bill:\");\n      this.bill.date = Date.parse(this.bill.dateStr);\n      console.log(this.bill);\n      let self = this;\n      this.dailyBillService.updateBill(this.bill)\n          .then(response => response.json())\n          .then(data => {\n              console.log(data);\n              self.router.navigateToRoute('billList')\n          });;\n    }\n\n  createDefaultBillItem() {\n    return {\n      product: {\n        productId: null,\n        productName: null\n      },\n      price: 0,\n      amount: 1\n    }\n  }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {json} from 'aurelia-fetch-client'\nimport {Router} from \"aurelia-router\"\nexport class BillDetails {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n        var self = this;\n        return this.dailyBillService.getBillById(params.id)\n            .then(response => response.json())\n            .then(data => {\n                console.log('bill: ')\n                console.log(data.object)\n                self.bill = data.object;\n                let date = new Date(data.object.date)\n                self.bill.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n                self.bill.billSum = 0;\n                self.bill.items.forEach(element => {\n                    self.bill.billSum += element.price * element.amount;\n                })\n          });\n    }\n    edit() {\n        this.router.navigateToRoute(\"editBill\", {id: this.bill.id});\n    }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class BillList {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        let date = new Date();\n        this.startDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + 1;\n        this.endDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    }\n\n    activate(params, routeConfig) {\n        this.findBills();\n    }\n\n    viewBillDetails(id) {\n        console.log(\"viewBillDetails: \" + id);\n        this.router.navigateToRoute('billDetails', {id: id})\n    }\n\n    findBills() {\n        let startDate = Date.parse(this.startDateStr);\n        let endDate = Date.parse(this.endDateStr);\n        this.params = {\n            startPeriodDate: startDate,\n            endPeriodDate: endDate,\n        }\n        var self = this;\n        console.log('params get bill');\n        console.log(this.params)\n        this.dailyBillService.getBills(this.params)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data);\n                        self.bills = data.object;\n                        self.bills.forEach((element) => {\n                            let date = new Date(element.date);\n                            element.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n                        })\n                    });\n    }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class Statistics {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n\n    constructor(dailyBillService, router) {\n        console.log('Init statistics module')\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        let date = new Date();\n        this.params = {\n            startPeriodDate: new Date(date.getFullYear(), date.getMonth(), 1),\n            endPeriodDate: date\n        }\n        // Aurelia doesn't support change of array in repeat.for\n        this.productNames = [{name: ''}];\n        this.startDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + 1;\n        this.endDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n        this.selectedCurrency = null;\n        this.currencies = [];\n        this.fullStatiscicInfo = null;\n        this.statisticsByProduct = [];\n    }\n\n    activate(params, routeConfig) {\n        this.getStatisticsByProduct(this.params);\n    }\n\n    getStatisticsByProduct(params) {\n        let names = this.productNames.map(it => it.name).filter(it => it);\n        params.productNames = names;\n        console.log(params)\n        this.statisticsByProduct = {}\n        let self = this;\n        this.dailyBillService.getStatisticByProduct(params)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data);\n                            self.fullStatisticInfo = data.object;\n                            let currencies = self.fullStatisticInfo.currencies;\n                            if (currencies.length > 0) {\n\n                                self.currencies = currencies.map(it => {return {name: it, active: false}});\n                                if(!self.selectedCurrency) {\n                                    self.selectedCurrency = self.currencies[0].name;\n                                    self.currencies[0].active = true;\n                                } else {\n                                    let isCurrencyExists = false;\n                                    self.currencies.forEach(it => {\n                                        if (it.name == self.selectedCurrency) {\n                                            it.active = true;\n                                            isCurrencyExists = true;\n                                        }\n                                    })\n                                    if(!isCurrencyExists) {\n                                        self.selectedCurrency = self.currencies[0].name;\n                                        self.currencies[0].active = true;\n                                    }\n                                }\n\n\n                                self.statisticsByProduct = self.fullStatisticInfo.statisticInfo[self.selectedCurrency];\n                                self.statisticsByProduct.statisticDetails.map(it => {\n                                                                it.active = true;\n                                                                return it;\n                                });\n\n                                self.statisticsByProduct.allEnabled = true;\n                                self.statisticsByProduct.totalSumCalculated = self.statisticsByProduct.totalSum;\n                            }\n                        });\n    }\n\n    updateStatistics() {\n        let startDate = Date.parse(this.startDateStr);\n        let endDate = Date.parse(this.endDateStr);\n        this.params = {\n            startPeriodDate: startDate,\n            endPeriodDate: endDate,\n        }\n        this.getStatisticsByProduct(this.params);\n    }\n\n    changeCurrency(currency) {\n        this.currencies.forEach(it => it.name != currency.name ? it.active = false : it.active = true);\n        this.selectedCurrency = currency.name;\n        this.updateStatistics();\n    }\n\n    switchItem(statisticsItem) {\n        statisticsItem.active = !statisticsItem.active;\n        this.statisticsByProduct.totalSumCalculated = !statisticsItem.active\n                ? this.statisticsByProduct.totalSumCalculated - statisticsItem.price\n                : this.statisticsByProduct.totalSumCalculated + statisticsItem.price;\n    }\n\n    addProductName() {\n        this.productNames.push({name: ''});\n    }\n\n    switchItems() {\n        this.statisticsByProduct.allEnabled = !this.statisticsByProduct.allEnabled;\n        this.statisticsByProduct.totalSumCalculated = !this.statisticsByProduct.allEnabled ? 0 : this.statisticsByProduct.totalSum;\n        let self = this;\n        this.statisticsByProduct.statisticDetails.map(it => {\n            it.active = self.statisticsByProduct.allEnabled;\n        })\n    }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class CurrencyList {\n    static inject() {\n            return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.initCurrencies();\n    }\n\n    initCurrencies() {\n        let self = this;\n        this.currencies = [];\n        this.dailyBillService.getAllCurrencies()\n                .then(response => response.json())\n                .then(data => {\n                    self.currencies = data.object;\n                }).catch(e => {\n                    self.errorMessages.push(e)\n                })\n    }\n\n    editCurrency(id) {\n        console.log(\"edit currency: \" + id);\n    }\n\n\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class ProductItem {\n    static inject() {\n         return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n\n    }\n\n    activate(params, routeConfig) {\n        let id = params.id;\n        this.initProduct(id)\n    }\n\n    initProduct(id) {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.getProductById(id)\n            .then(response => response.json())\n            .then(data => {\n                self.product = data.object;\n                console.log(\"product:\", self.product)\n            }).catch(e => {\n                console.log(\"error get bill:\" + e);\n            })\n    }\n\n    updateProduct() {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.updateProduct(this.product)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"update product result\");\n                console.log(data);\n                if(data.code == '200'){\n                    this.router.navigateToRoute('product-list')\n                } else {\n                    self.errorMessages.push(data.message)\n                }\n            })\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class ProductList {\n    static inject() {\n            return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.initProducts();\n        this.filterValue = \"\";\n    }\n\n    initProducts() {\n        let self = this;\n        this.errorMessages = [];\n        this.products = [];\n        this.filteredProducts = [];\n        this.dailyBillService.getAllProducts()\n                .then(response => response.json())\n                .then(data => {\n                    self.products = data.object;\n                    self.filteredProducts = data.object;\n                }).catch(e => {\n                    self.errorMessages.push(e)\n                })\n    }\n\n    editProduct(id) {\n        this.router.navigateToRoute('product-item', {id: id})\n    }\n\n    filterChange() {\n        if (this.filterValue) {\n            this.filteredProducts = this.products.filter(it => it.name.toLowerCase().indexOf(this.filterValue.toLowerCase()) >=0);\n        } else {\n            this.filteredProducts = this.products;\n        }\n    }\n}\n","import {HttpClient, json} from 'aurelia-fetch-client'\n//import {HttpClient} from 'aurelia-http-client'\n\nlet httpClient = new HttpClient();\n\nexport class DailyBillService {\n    constructor() {\n    }\n\n    getBills(params) {\n        console.log(\"Get bills\")\n        return httpClient.fetch('http://localhost:8080/daily-bill/bills', {\n                   method: \"POST\",\n                   body: json(params)\n            })\n    }\n\n    getBillById(id) {\n        console.log(\"Get bill by id: \" +id)\n        return httpClient.fetch('http://localhost:8080/daily-bill/bill/' + id)\n    }\n\n    addBill(bill) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/add', {\n             method: \"PUT\",\n             body: json(bill)\n        })\n      }\n    updateBill(bill) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/edit', {\n               method: \"POST\",\n               body: json(bill)\n        })\n    }\n\n    getShops() {\n        return httpClient.fetch('http://localhost:8080/daily-bill/shops')\n    }\n\n    getProducts() {\n        return httpClient.fetch('http://localhost:8080/daily-bill/products')\n    }\n\n    getStatisticByProduct(params) {\n        console.log('Getstatistic by product');\n        return httpClient.fetch('http://localhost:8080/daily-bill/statistics/product', {\n                   method: \"POST\",\n                   body: json(params)\n            })\n    }\n\n    findLastPrice(shopId, productId) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/last/price/shop/' + shopId + '/product/' + productId)\n    }\n\n    getAllShops(){\n        return httpClient.fetch(\"http://localhost:8080/shops/all\")\n    }\n\n    getShopById(id) {\n        return httpClient.fetch(\"http://localhost:8080/shops/\" + id)\n    }\n\n    updateShop(shop) {\n        return httpClient.fetch(\"http://localhost:8080/shops\", {\n            method: \"POST\",\n            body: json(shop)\n        })\n    }\n\n    getAllProducts(){\n        return httpClient.fetch(\"http://localhost:8080/products/all\")\n    }\n\n    getProductById(id) {\n        return httpClient.fetch(\"http://localhost:8080/products/\" + id)\n    }\n\n    updateProduct(product) {\n        return httpClient.fetch(\"http://localhost:8080/products\", {\n                method: \"POST\",\n                body: json(product)\n        })\n    }\n\n    getAllCurrencies() {\n        return httpClient.fetch(\"http://localhost:8080/currency/all\")\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class ShopItem {\n    static inject() {\n         return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.errorMessages = [];\n    }\n\n    activate(params, routeConfig) {\n        let id = params.id;\n        this.initShop(id)\n    }\n\n    initShop(id) {\n        let self = this;\n        this.dailyBillService.getShopById(id)\n            .then(response => response.json())\n            .then(data => {\n                self.shop = data.object;\n                console.log(\"shop:\", self.shop)\n            }).catch(e => {\n                console.log(\"error get bill:\" + e);\n            })\n    }\n\n    updateShop() {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.updateShop(this.shop)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"update shop result\");\n                console.log(data);\n                if(data.code == '200'){\n                    this.router.navigateToRoute('shop-list')\n                } else {\n                    self.errorMessages.push(data.message)\n                }\n            })\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class ShopList {\n    static inject() {\n            return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.initShops();\n        this.filterValue = \"\";\n    }\n\n    initShops() {\n        let self = this;\n        this.errorMessages = [];\n        this.dailyBillService.getAllShops()\n            .then(response => response.json())\n            .then(data => {\n                self.shops = data.object;\n                self.filteredShops = data.object;\n            }).catch(e => {\n                self.errorMessages.push(e)\n            })\n    }\n\n    editShop(id) {\n        this.router.navigateToRoute('shop-item', {id: id})\n    }\n\n    filterChange() {\n        console.log(\"filter shop changed\")\n        if(this.filterValue) {\n            this.filteredShops = this.shops.filter(it => it.name.toLowerCase().indexOf(this.filterValue.toLowerCase()) >= 0);\n        } else {\n            this.filteredShops = this.shops;\n        }\n    }\n}\n","import {bindable, bindingMode} from 'aurelia-framework';\nimport {DailyBillService} from \"../../service/daily-bill-service\"\nexport class EditBillItem {\n\n    @bindable billItem;\n    @bindable products;\n    @bindable shopId;\n    static inject() {\n        return [DailyBillService]\n    }\n    constructor(dailyBillService) {\n        console.log(\"add bill item constructor\")\n        this.dailyBillService = dailyBillService;\n    }\n\n    findLastPrice = (productId) => {\n        console.log('bill-item: find last price: ' + productId);\n        console.log(this.shopId);\n        if(this.shopId) {\n            let self = this;\n            return this.dailyBillService.findLastPrice(this.shopId, productId)\n                          .then(response => response.json())\n                          .then(data => {\n                              console.log('last price')\n                              console.log(data);\n                              let lastPrice = data.object;\n                              self.billItem.price = lastPrice ? lastPrice : 0;\n                              return data;\n                          });\n        }\n\n    }\n}\n","import {bindable, bindingMode} from 'aurelia-framework';\n\nexport class FilteredSelect {\n    @bindable selectedItem;\n    @bindable items;\n    @bindable callbackFn;\n    constructor() {\n    }\n    attached() {\n        if(this.items) {\n            this.filteredItems = this.items;\n        }\n        if(this.selectedItem) {\n            this.filterValue = this.selectedItem.name;\n        }\n    }\n\n    searchByFilterValue(it, filterValues) {\n        let condition = true;\n        for(let s of filterValues) {\n           condition = condition && it.name.toLowerCase().indexOf(s.toLowerCase()) >= 0;\n        }\n        return condition;\n    }\n\n    filterChange() {\n        if(this.filterValue) {\n            let delimeter = /\\s+/;\n            let filterValues = this.filterValue.split(delimeter).filter(i => i !== '');\n            this.filteredItems = this.items.filter(it => this.searchByFilterValue(it, filterValues))\n        } else {\n            this.filteredItems = this.items;\n        }\n        let value = this.items.find((element, index, array) => element.name.toLowerCase() === this.filterValue.toLowerCase())\n        if(value) {\n            this.selectedItem = value;\n            this.filterSelectedItem = value;\n        } else {\n            this.selectedItem = {\n                id: null,\n                name: this.filterValue\n            }\n        }\n    }\n\n    selectItem() {\n        console.log('select item')\n        this.filterValue = this.filterSelectedItem.name;\n        this.selectedItem = this.filterSelectedItem;\n        if(this.callbackFn) {\n            this.callbackFn(this.selectedItem.id);\n        }\n    }\n}\n"],"sourceRoot":"../src"}