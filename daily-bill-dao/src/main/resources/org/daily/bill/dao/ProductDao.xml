<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductDao">
    <select id="findById" resultType="product">
        select id, name, description, created, updated, active from product where id = #{id}
    </select>

    <select id="findAll" resultType="product">
        select id, name, description, created, updated, active from product
    </select>

    <select id="findProducts" resultType="product" parameterType="java.util.Map">
        select id, name, description, created, updated, active
        from product
        <if test="showActive">
            where active = 'true'
        </if>
        order by name
    </select>

    <insert id="insert" parameterType="java.util.Map">
        <selectKey keyColumn="id" resultType="long" order="AFTER" keyProperty="id">
            select currval('product_seq')
        </selectKey>
        insert into product (id, name, description, created
            <if test="active != null">, active</if>)
        values(nextval('product_seq'), #{name}, #{description}, now()
            <if test="active != null">, #{active}</if>)
    </insert>

    <update id="update" parameterType="java.util.Map">
        update product
        set name = #{name},
        description = #{description},
        <if test="active != null">
            active = #{active},
        </if>
        updated = now()

        where id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from product where id = #{id}
    </delete>

    <select id="findLastPrice" resultType="BigDecimal">
        select price
        from bill b
        inner join bill_item bi on b.id = bi.bill_id
        where b.shop_id= #{shopId} and bi.product_id = #{productId}
        order by b.date desc
        limit 1
    </select>

</mapper>
