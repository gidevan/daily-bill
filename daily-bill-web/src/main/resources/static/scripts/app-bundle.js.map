{"version":3,"sources":["app.js","environment.js","main.js","daily-bill/add-bill.js","daily-bill/bill-details.js","daily-bill/bill-list.js","daily-bill/statistics.js","resources/index.js","daily-bill/product/product-item.js","daily-bill/product/product-list.js","daily-bill/service/daily-bill-service.js","daily-bill/shop/shop-item.js","daily-bill/shop/shop-list.js","daily-bill/components/bill-item/edit-bill-item.js","daily-bill/components/filtered-select/filtered-select.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","AddBill","inject","dailyBillService","activate","params","routeConfig","console","log","id","self","getShops","response","json","data","shops","object","getProducts","prodData","products","getBillById","bill","initOpenBill","date","createBill","catch","error","attached","Date","dateStr","getFullYear","getMonth","getDate","shop","shopId","shopName","items","addBillItem","push","createDefaultBillItem","addBill","parse","navigateToRoute","updateBill","product","productId","productName","price","amount","BillDetails","billSum","forEach","element","edit","BillList","startDateStr","endDateStr","findBills","viewBillDetails","startDate","endDate","startPeriodDate","endPeriodDate","getBills","bills","Statistics","productNames","getStatisticsByProduct","names","it","filter","getStatisticByProduct","statisticsByProduct","updateStatistics","addProductName","ProductItem","initProduct","errorMessages","getProductById","e","updateProduct","code","message","ProductList","initProducts","filterValue","filteredProducts","getAllProducts","editProduct","filterChange","toLowerCase","indexOf","httpClient","DailyBillService","fetch","method","body","findLastPrice","getAllShops","getShopById","updateShop","ShopItem","initShop","ShopList","initShops","filteredShops","editShop","EditBillItem","lastPrice","billItem","FilteredSelect","filteredItems","selectedItem","searchByFilterValue","filterValues","condition","s","delimeter","split","i","value","find","index","array","filterSelectedItem","selectItem","callbackFn"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n configureRouter(config, router){\n    config.title = 'Daily Bill';\n    config.map([\n        { route: '',              moduleId: 'daily-bill/bill-list',   title: 'Bill List', name: 'billList'},\n        { route: 'bill/:id',  moduleId: 'daily-bill/bill-details', name:'billDetails' },\n        {route: 'bill/add', moduleId: 'daily-bill/add-bill', name: 'addBill'},\n        {route: 'bill/edit/:id', moduleId: 'daily-bill/add-bill', name: 'editBill'},\n        {route: 'statistics', moduleId: 'daily-bill/statistics', name: 'statistics'},\n        {route: 'product/list', moduleId: 'daily-bill/product/product-list', name: 'product-list'},\n        {route: 'product/edit/:id', moduleId: 'daily-bill/product/product-item', name: 'product-item'},\n        {route: 'shop/list', moduleId: 'daily-bill/shop/shop-list', name: 'shop-list'},\n        {route: 'shop/edit/:id', moduleId: 'daily-bill/shop/shop-item', name: 'shop-item'}\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class AddBill{\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n    }\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n        console.log('activate add-bill');\n        console.log('params: ', params.id)\n        let self = this;\n\n        this.dailyBillService.getShops()\n            .then(response => response.json())\n                        .then(data => {\n                            console.log('shops: ')\n                            console.log(data)\n                            self.shops = data.object;\n                            return self.shops;\n                        }).then(shops => {\n                            return self.dailyBillService.getProducts()\n\n\n                        }).then(response => response.json())\n                        .then(prodData => {\n                                                              console.log('products: ')\n                                                              console.log(prodData);\n                                                              console.log(prodData.object);\n                                                              self.products = prodData.object\n                                                              return self.products;\n                                                          })\n                        .then(products => {\n                            if(params.id) {\n                                        return self.dailyBillService.getBillById(params.id)\n                                            .then(response => response.json())\n                                            .then(data => {\n                                                console.log('bill: ')\n                                                console.log(data.object)\n                                                self.bill = data.object;\n                                                self.initOpenBill();\n                                                console.log('bill date: ')\n                                                console.log(self.bill.date);\n                                                return self.bill;\n                                        });\n                            } else {\n                                this.createBill();\n                            }\n                        }).catch(error => {\n                            console.log('Error getting data')\n                            console.log(error)\n                            self.shops = [];\n                            self.products = [];\n                        })\n\n    }\n    attached() {\n        console.log('attached add-bill')\n    }\n    initOpenBill() {\n        let date = new Date(this.bill.date)\n        this.bill.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n    }\n  createBill() {\n    let date = new Date();\n    this.bill = {\n        id: null,\n        date: date,\n        dateStr: date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate(),\n        shop: {\n          shopId: null,\n          shopName: \"\"\n        },\n        items: [\n        ]\n      };\n    this.addBillItem()\n  }\n\n  addBillItem() {\n    console.log(\"add bill item\");\n    this.bill.items.push(this.createDefaultBillItem());\n  }\n\n  addBill() {\n    console.log(\"add bill:\");\n    this.bill.date = Date.parse(this.bill.dateStr);\n    console.log(this.bill);\n    let self = this;\n    this.dailyBillService.addBill(this.bill)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            self.router.navigateToRoute('billList')\n        });;\n  }\n\n  updateBill() {\n      console.log(\"update bill:\");\n      this.bill.date = Date.parse(this.bill.dateStr);\n      console.log(this.bill);\n      let self = this;\n      this.dailyBillService.updateBill(this.bill)\n          .then(response => response.json())\n          .then(data => {\n              console.log(data);\n              self.router.navigateToRoute('billList')\n          });;\n    }\n\n  createDefaultBillItem() {\n    return {\n      product: {\n        productId: null,\n        productName: null\n      },\n      price: 0,\n      amount: 1\n    }\n  }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {json} from 'aurelia-fetch-client'\nimport {Router} from \"aurelia-router\"\nexport class BillDetails {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n        var self = this;\n        return this.dailyBillService.getBillById(params.id)\n            .then(response => response.json())\n            .then(data => {\n                console.log('bill: ')\n                console.log(data.object)\n                self.bill = data.object;\n                let date = new Date(data.object.date)\n                self.bill.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n                self.bill.billSum = 0;\n                self.bill.items.forEach(element => {\n                    self.bill.billSum += element.price * element.amount;\n                })\n          });\n    }\n    edit() {\n        this.router.navigateToRoute(\"editBill\", {id: this.bill.id});\n    }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class BillList {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        let date = new Date();\n        this.startDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + 1;\n        this.endDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    }\n\n    activate(params, routeConfig) {\n        this.findBills();\n    }\n\n    viewBillDetails(id) {\n        console.log(\"viewBillDetails: \" + id);\n        this.router.navigateToRoute('billDetails', {id: id})\n    }\n\n    findBills() {\n        let startDate = Date.parse(this.startDateStr);\n        let endDate = Date.parse(this.endDateStr);\n        this.params = {\n            startPeriodDate: startDate,\n            endPeriodDate: endDate,\n        }\n        var self = this;\n        console.log('params get bill');\n        console.log(this.params)\n        this.dailyBillService.getBills(this.params)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data);\n                        self.bills = data.object;\n                        self.bills.forEach((element) => {\n                            let date = new Date(element.date);\n                            element.dateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n                        })\n                    });\n    }\n}\n","import {DailyBillService} from \"./service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class Statistics {\n    static inject() {\n        return [DailyBillService, Router]\n    }\n\n    constructor(dailyBillService, router) {\n    console.log('Init statistics module')\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        let date = new Date();\n        this.params = {\n            startPeriodDate: new Date(date.getFullYear(), date.getMonth(), 1),\n            endPeriodDate: date\n        }\n        // Aurelia doesn't support change of array in repeat.for\n        this.productNames = [{name: ''}];\n        this.startDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + 1;\n        this.endDateStr = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    }\n\n    activate(params, routeConfig) {\n        this.getStatisticsByProduct(this.params);\n    }\n\n    getStatisticsByProduct(params) {\n        let names = this.productNames.map(it => it.name).filter(it => it);\n        params.productNames = names;\n        console.log(params)\n        let self = this;\n        this.dailyBillService.getStatisticByProduct(params)\n                        .then(response => response.json())\n                        .then(data => {\n                            console.log(data);\n                            self.statisticsByProduct = data.object;\n                        });\n    }\n\n    updateStatistics() {\n        let startDate = Date.parse(this.startDateStr);\n        let endDate = Date.parse(this.endDateStr);\n        this.params = {\n            startPeriodDate: startDate,\n            endPeriodDate: endDate,\n        }\n        this.getStatisticsByProduct(this.params);\n    }\n\n    addProductName() {\n        this.productNames.push({name: ''});\n    }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class ProductItem {\n    static inject() {\n         return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n\n    }\n\n    activate(params, routeConfig) {\n        let id = params.id;\n        this.initProduct(id)\n    }\n\n    initProduct(id) {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.getProductById(id)\n            .then(response => response.json())\n            .then(data => {\n                self.product = data.object;\n                console.log(\"product:\", self.product)\n            }).catch(e => {\n                console.log(\"error get bill:\" + e);\n            })\n    }\n\n    updateProduct() {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.updateProduct(this.product)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"update product result\");\n                console.log(data);\n                if(data.code == '200'){\n                    this.router.navigateToRoute('product-list')\n                } else {\n                    self.errorMessages.push(data.message)\n                }\n            })\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class ProductList {\n    static inject() {\n            return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.initProducts();\n        this.filterValue = \"\";\n    }\n\n    initProducts() {\n        let self = this;\n        this.errorMessages = [];\n        this.products = [];\n        this.filteredProducts = [];\n        this.dailyBillService.getAllProducts()\n                .then(response => response.json())\n                .then(data => {\n                    self.products = data.object;\n                    self.filteredProducts = data.object;\n                }).catch(e => {\n                    self.errorMessages.push(e)\n                })\n    }\n\n    editProduct(id) {\n        this.router.navigateToRoute('product-item', {id: id})\n    }\n\n    filterChange() {\n        if (this.filterValue) {\n            this.filteredProducts = this.products.filter(it => it.name.toLowerCase().indexOf(this.filterValue.toLowerCase()) >=0);\n        } else {\n            this.filteredProducts = this.products;\n        }\n    }\n}\n","import {HttpClient, json} from 'aurelia-fetch-client'\n//import {HttpClient} from 'aurelia-http-client'\n\nlet httpClient = new HttpClient();\n\nexport class DailyBillService {\n    constructor() {\n    }\n\n    getBills(params) {\n        console.log(\"Get bills\")\n        return httpClient.fetch('http://localhost:8080/daily-bill/bills', {\n                   method: \"POST\",\n                   body: json(params)\n            })\n    }\n\n    getBillById(id) {\n        console.log(\"Get bill by id: \" +id)\n        return httpClient.fetch('http://localhost:8080/daily-bill/bill/' + id)\n    }\n\n    addBill(bill) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/add', {\n             method: \"PUT\",\n             body: json(bill)\n        })\n      }\n    updateBill(bill) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/edit', {\n               method: \"POST\",\n               body: json(bill)\n        })\n    }\n\n    getShops() {\n        return httpClient.fetch('http://localhost:8080/daily-bill/shops')\n    }\n\n    getProducts() {\n        return httpClient.fetch('http://localhost:8080/daily-bill/products')\n    }\n\n    getStatisticByProduct(params) {\n        console.log('Getstatistic by product');\n        return httpClient.fetch('http://localhost:8080/daily-bill/statistics/product', {\n                   method: \"POST\",\n                   body: json(params)\n            })\n    }\n\n    findLastPrice(shopId, productId) {\n        return httpClient.fetch('http://localhost:8080/daily-bill/last/price/shop/' + shopId + '/product/' + productId)\n    }\n\n    getAllShops(){\n        return httpClient.fetch(\"http://localhost:8080/shops/all\")\n    }\n\n    getShopById(id) {\n        return httpClient.fetch(\"http://localhost:8080/shops/\" + id)\n    }\n\n    updateShop(shop) {\n        return httpClient.fetch(\"http://localhost:8080/shops\", {\n            method: \"POST\",\n            body: json(shop)\n        })\n    }\n\n    getAllProducts(){\n        return httpClient.fetch(\"http://localhost:8080/products/all\")\n    }\n\n    getProductById(id) {\n        return httpClient.fetch(\"http://localhost:8080/products/\" + id)\n    }\n\n    updateProduct(product) {\n        return httpClient.fetch(\"http://localhost:8080/products\", {\n                method: \"POST\",\n                body: json(product)\n        })\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\n\nexport class ShopItem {\n    static inject() {\n         return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.errorMessages = [];\n    }\n\n    activate(params, routeConfig) {\n        let id = params.id;\n        this.initShop(id)\n    }\n\n    initShop(id) {\n        let self = this;\n        this.dailyBillService.getShopById(id)\n            .then(response => response.json())\n            .then(data => {\n                self.shop = data.object;\n                console.log(\"shop:\", self.shop)\n            }).catch(e => {\n                console.log(\"error get bill:\" + e);\n            })\n    }\n\n    updateShop() {\n        this.errorMessages = [];\n        let self = this;\n        this.dailyBillService.updateShop(this.shop)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"update shop result\");\n                console.log(data);\n                if(data.code == '200'){\n                    this.router.navigateToRoute('shop-list')\n                } else {\n                    self.errorMessages.push(data.message)\n                }\n            })\n    }\n}\n","import {DailyBillService} from \"../service/daily-bill-service\"\nimport {Router} from \"aurelia-router\"\nexport class ShopList {\n    static inject() {\n            return [DailyBillService, Router]\n    }\n    constructor(dailyBillService, router) {\n        this.dailyBillService = dailyBillService;\n        this.router = router;\n        this.initShops();\n        this.filterValue = \"\";\n    }\n\n    initShops() {\n        let self = this;\n        this.errorMessages = [];\n        this.dailyBillService.getAllShops()\n            .then(response => response.json())\n            .then(data => {\n                self.shops = data.object;\n                self.filteredShops = data.object;\n            }).catch(e => {\n                self.errorMessages.push(e)\n            })\n    }\n\n    editShop(id) {\n        this.router.navigateToRoute('shop-item', {id: id})\n    }\n\n    filterChange() {\n        console.log(\"filter shop changed\")\n        if(this.filterValue) {\n            this.filteredShops = this.shops.filter(it => it.name.toLowerCase().indexOf(this.filterValue.toLowerCase()) >= 0);\n        } else {\n            this.filteredShops = this.shops;\n        }\n    }\n}\n","import {bindable, bindingMode} from 'aurelia-framework';\nimport {DailyBillService} from \"../../service/daily-bill-service\"\nexport class EditBillItem {\n\n    @bindable billItem;\n    @bindable products;\n    @bindable shopId;\n    static inject() {\n        return [DailyBillService]\n    }\n    constructor(dailyBillService) {\n        console.log(\"add bill item constructor\")\n        this.dailyBillService = dailyBillService;\n    }\n\n    findLastPrice = (productId) => {\n        console.log('bill-item: find last price: ' + productId);\n        console.log(this.shopId);\n        if(this.shopId) {\n            let self = this;\n            return this.dailyBillService.findLastPrice(this.shopId, productId)\n                          .then(response => response.json())\n                          .then(data => {\n                              console.log('last price')\n                              console.log(data);\n                              let lastPrice = data.object;\n                              self.billItem.price = lastPrice ? lastPrice : 0;\n                              return data;\n                          });\n        }\n\n    }\n}\n","import {bindable, bindingMode} from 'aurelia-framework';\n\nexport class FilteredSelect {\n    @bindable selectedItem;\n    @bindable items;\n    @bindable callbackFn;\n    constructor() {\n    }\n    attached() {\n        if(this.items) {\n            this.filteredItems = this.items;\n        }\n        if(this.selectedItem) {\n            this.filterValue = this.selectedItem.name;\n        }\n    }\n\n    searchByFilterValue(it, filterValues) {\n        let condition = true;\n        for(let s of filterValues) {\n           condition = condition && it.name.toLowerCase().indexOf(s.toLowerCase()) >= 0;\n        }\n        return condition;\n    }\n\n    filterChange() {\n        if(this.filterValue) {\n            let delimeter = /\\s+/;\n            let filterValues = this.filterValue.split(delimeter).filter(i => i !== '');\n            this.filteredItems = this.items.filter(it => this.searchByFilterValue(it, filterValues))\n        } else {\n            this.filteredItems = this.items;\n        }\n        let value = this.items.find((element, index, array) => element.name.toLowerCase() === this.filterValue.toLowerCase())\n        if(value) {\n            this.selectedItem = value;\n            this.filterSelectedItem = value;\n        } else {\n            this.selectedItem = {\n                id: null,\n                name: this.filterValue\n            }\n        }\n    }\n\n    selectItem() {\n        console.log('select item')\n        this.filterValue = this.filterSelectedItem.name;\n        this.selectedItem = this.filterSelectedItem;\n        if(this.callbackFn) {\n            this.callbackFn(this.selectedItem.id);\n        }\n    }\n}\n"],"sourceRoot":"../src"}